<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd"
       xmlns:tx="http://www.springframework.org/schema/tx">


    <!-- 扫描注解包 -->
    <context:component-scan base-package="com.dhu.cst.zjm">
    </context:component-scan>
    <!--配置文件加载 init.properties-->
    <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:jdbc_mysql.properties"/>
    </bean>
    <!-- 导入外部配置数据库连接的文件 -->
    <!-- classpath:jdbc.properties -->
    <context:property-placeholder location="classpath:jdbc_mysql.properties"/>

    <bean id="cookieFilter" class="com.dhu.cst.zjm.util.CookieFilter">
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- 连接信息 -->
        <property name="driverClass" value="${jdbc.driverClass}">
        </property>
        <property name="jdbcUrl" value="${jdbc.url}">
        </property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!-- 其他配置 <property name="initialPoolSize" value="10"></property> <property
            name="minPoolSize" value="5"></property> <property name="maxPoolSize" value="60"></property>
            <property name="acquireIncrement" value="5"></property> <property name="maxStatements"
            value="50"></property> <property name="maxStatementsPerConnection" value="5"></property>
            <property name="idleConnectionTestPeriod" value="40"></property> <property
            name="maxIdleTime" value="20"></property> <property name="acquireRetryAttempts"
            value="25"></property> <property name="acquireRetryDelay" value="1000"></property>
            <property name="checkoutTimeout" value="3000"></property> <property name="autoCommitOnClose"
            value="false"></property> -->
    </bean>

    <!-- 配置sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="packagesToScan">
            <list>
                <value>com.dhu.cst.zjm.*</value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate4.SpringSessionContext
                </prop>

                <!-- 开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <!-- 启动"查询缓存"如果想缓存使用findall()、list()、Iterator()、createCriteria()、createQuery()等方法获得的数据结果集,必须配置此项-->
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <!-- 高速缓存提供程序 -->
                <!-- 由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
                <prop key="hibernate.cache.region.factory_class">
                    org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
                </prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 配置声明式事务管理（采用注解的方式） -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- cacheManager, 指定ehcache.xml的位置 -->
    <bean id="cacheManagerEhcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
        <!-- 由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
        <property name="shared" value="true"/>
    </bean>

</beans>